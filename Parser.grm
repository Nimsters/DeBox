%token <string> ID
%token <unit> WWTP FROM WTP PREM PRMS GET WG WC TO PLUS COMMA DOT COLON DASH
%token <unit> LPAR RPAR LBRA RBRA EOF
%token <unit> BOT NEG AND OR IMP
%token <unit> PRM ASS DIS CPY AIN AE1 AE2 OI1 OI2 OEL IIN IEL
%token <unit> NIN NEL DIN DEL BEL MOD PBC LEM

%right IMP
%left OR
%left AND
%nonassoc NEG

%start Proof
%start Step
%start Argument
%start Conclusion
%type <Proof.proof> Proof
%type <Proof.sequent> Sequent
%type <Proof.formula list> Premises PrmList
%type <Proof.proofstep list> StepList
%type <Proof.proofstep> Step
%type <Proof.formula  option* string> Conclusion
%type <Proof.reference list> References Discharge
%type <Proof.reference> Box
%type <Proof.rule> Rule Arg
%type <Proof.formula> Formula 
%type <Proof.rule * Proof.reference list> Argument
%type <string> Ref

%%

Proof:
        ID COLON Sequent StepList           {($1, $3, $4)}
;

Sequent:
        WWTP Formula DOT                    {([], $2)}
      | FROM Premises WTP Formula DOT       {($2, $4)}
;

Premises:
        PREM Formula                        {[$2]}
      | PRMS PrmList                        {$2}
;

PrmList:
        Formula PLUS Formula                {$1 :: [$3]}
      | Formula COMMA PrmList               {$1 :: $3}
;

StepList:
        EOF                                 {[]}
      | Step StepList                       {$1 :: $2}
;

Step:
        Discharge                           {(NONE, Proof.Dis, $1, "")}
      | Argument Conclusion                 {(#1 $2, #1 $1, #2 $1, #2 $2)}
;

Discharge:
        DIS Ref DOT                         {[Proof.Line $2]}
      | DIS Box DOT                         {[$2]}
      | DIS References DOT                  {$2} 
;

Conclusion:
        WG Formula Ref DOT                  {(SOME $2, $3)}
      | WC Formula DOT                      {(SOME $2, "")}
      | Formula Ref DOT                     {(SOME $1, $2)}
;

Argument:
        Arg Ref                             {($1, [Proof.Line $2])}
      | Arg References                      {($1, $2)}
      | Arg Box                             {($1, [$2])}
      | Arg                                 {($1, [])}
;

Arg:
        Rule TO                             {$1}
      | Rule                                {$1}
;

References:
        Ref PLUS Ref                    {(Proof.Line $1) :: [Proof.Line $3]}
      | Ref PLUS Box                        {(Proof.Line $1) :: [$3]}
      | Box PLUS Ref                        {$1 :: [Proof.Line $3]}
      | Box PLUS Box                        {$1 :: [$3]}
      | Box COMMA References                {$1 :: $3}
      | Ref COMMA References                {(Proof.Line $1) :: $3}
;

Box:
        Ref DASH Ref                        {Proof.Box ($1, $3)}
;    

Ref:
        LBRA ID RBRA                        {$2}
;

Rule:
        ASS                                 {Proof.Ass}
      | PRM                                 {Proof.Prm}
      | CPY                                 {Proof.Cpy}
      | AIN                                 {Proof.Ain}
      | AE1                                 {Proof.Ae1}
      | AE2                                 {Proof.Ae2}
      | OI1                                 {Proof.Oi1}
      | OI2                                 {Proof.Oi2}
      | OEL                                 {Proof.Oel}
      | IIN                                 {Proof.Iin}
      | IEL                                 {Proof.Iel}
      | NIN                                 {Proof.Nin}
      | NEL                                 {Proof.Nel}
      | DIN                                 {Proof.Din}
      | DEL                                 {Proof.Del}
      | BEL                                 {Proof.Bel}
      | MOD                                 {Proof.Mod}
      | PBC                                 {Proof.Pbc}
      | LEM                                 {Proof.Lem}
;

Formula:
        BOT                                 {Proof.BOT}
      | ID                                  {Proof.Atom $1}
      | Formula IMP Formula                 {Proof.IMP ($1, $3)}
      | Formula OR  Formula                 {Proof.OR  ($1, $3)}
      | Formula AND Formula                 {Proof.AND ($1, $3)}
      | NEG Formula                         {Proof.NEG $2}
      | LPAR Formula RPAR                   {$2}
;
      
